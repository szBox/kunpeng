<template>
	<div>
		
		<SearchForm :items="items" :showMessage="true" :inline="true" labelWidth="" :model="search"></SearchForm>
		<DataTable :loading="loading" :columns="columns" :data="data" :total="total" :page-size="search.size" @page-change="pageChange"></DataTable>
	</div>

</template>

<script>
	import DataTable from '@components/data-table/index';
	import SearchForm from '@components/search-form/index';
	import home from '@src/network/home/home.js';
	import statistics from '@src/network/statistics/statistics.js'
	export default {
		data() {
			return {
				search: {
				
					gqTypeId: '',
					gradeId: '',
					name: "",
					readBookId: '',
					readTypeId: '',
					sid: this.global.session.get('user').sid,
					status: "",
					current: 1,
					size: 6
					
				},
				books:{
					gradeId:'',
					typeId:'',
					name: "",
					sid: this.global.session.get('user').sid,
					current: 1,
					size:9999
				},
				items: [
                    {
                        prop: 'gradeId',
                        type: 'select',
                        label: '年级',
                        value:'',
//                      rules: [
//                          {required: true, message: '位置不能为空'}
//                      ],
                        options: [
                        ],
                        defaultProps: {
                        	id: 'id',
                        	label: 'name'
                        },
                        hasAll: true,
                        change: (val) => {
                            this.bookSelect(val);
                        }
                    },
                    {
                        prop: '',
                        type: 'select',
                        label: '阅读类型',
                        options: [  
                        ],
                        defaultProps: {
                        	id: 'id',
                        	label: 'name'
                        },
                        hasAll: true
                    },
                    
                    {
                        prop: 'typeId',
                        type: 'select',
                        label: '书籍名称',
                        options: [  
                        ],
                        defaultProps: {
                        	id: 'id',
                        	label: 'name'
                        },
                        hasAll: true
                    },
                   
                    {
                        type: 'action',
                        actionList: [
                            {
                                text: '查询',
                                btnType: 'warning',
                                handleClick: () => {
									this.paperList()
//                                  this.formValidate('locationAddForm', this.save);
                                }
                            },
                            
                        ]
                    }
                ],
				columns: [
					{
						//  全选模块
                        type: 'selection'	
					},
					{
						label: '试卷ID',
						prop: 'id',
//						renderContent: (h, { row, $index }) => {
//							return (+$index+1)+(this.search.current)*(this.search.size);
//						}
					},
					{
						label: '试卷名称',
						prop: 'name'
					},
					{
						label: '阅读年级',
						prop: 'gradeName'
					},
					
					{
						label: '阅读书籍名称',
						prop: 'readBookName'
					},
					{
						label: '组题方式',
						prop: ''
					},
					{
						label: '试题使用状态',
						prop: ''
					},
					{
						label: '添加时间',
						prop: ''
					},
					{
						label: '操作',
						type: 'action',
						width:'260px',
						renderContent: (h, { row }) => {
							return [
							
								<el-button type='primary' on-click={() => this.$router.push({ name: 'booksSee', params: { init: row}})}  size='mini'>查看</el-button>,
								<el-button type='' on-click={() => this.$router.push({ name: 'booksEdit', params: { init: row }})} style='border:1px solid #409EFF; color:#409EFF' size='mini' >更新</el-button>,
								<el-button type='' on-click={() => this.global.deleteConfirm.call(this, this.delect, row.id)} style='border:1px solid #F46C6C; color:#F46C6C' size='mini' >删除</el-button>,
							]
                        }
					},
				],
				data: [],
				total: 0,
				loading: true
			}
		},
		methods: {
			pageChange(index) {
				this.search.current = index;
				this.paperList();
			},
		
			paperList() {
				let params;
				if(this.search.dateArr) {
					params = {
						...this.search,
						startDate: this.search.dateArr[0],
						endDate: this.search.dateArr[1]
					}
				}else{
					params = {
						...this.search
					}
				}
				statistics.paper(params).then(res => {
                    console.log('试卷',res)  //接受到的参数
					if(res.data.code === 0) {
						
						this.loading = false;
						this.data = res.data.data.records;
                        this.total =  res.data.data.total;
                    }
                    
                })
           },
           bookSelect(){
           		statistics.bookSel(this.books).then(res => {
                    console.log('书籍下拉',res)  //接受到的参数
					if(res.data.code === 0) {
						this.items[2].options = res.data.data.records;
                    }
                    
                })
           },
		},
		mounted() {
			this.items[0].options = this.global.session.get('gradeList')
			this.paperList();
			this.bookSelect();
		},
		components: {
			DataTable,
			SearchForm
		}
	}
</script>

<style lang="less" scoped>

	
</style>

