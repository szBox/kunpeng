<template>
	<div>
		<SearchForm :items="items" :showMessage="true" :inline="true" labelWidth="" :model="search" ref="locationAddForm"></SearchForm>
		
		
		<div class="button-box">
            <el-button @click='goAdd()' type='primary' icon="el-icon-plus" class='btn-add' style='margin-bottom: 15px;'>添加</el-button>
           
            <el-button @click="delectList" type="danger" plain icon="el-icon-close" class="btn-delete" >批量删除</el-button>
        </div>
		
		<DataTable :loading="loading" :columns="columns" :data="data" :total="total" :page-size="search.size" @page-change="pageChange"  @selection-change="selectionChange"></DataTable>
		
	</div>

</template>

<script>
	import DataTable from '@components/data-table/index';
	import SearchForm from '@components/search-form/index';
	import booksAdmin from '@src/network/books/booksAdmin.js';
	export default {
		data() {
			return {
				search: {				
					gradeId: '',
					typeId:'',
					name: "",
					sid: this.global.session.get('user').sid,
					current: 1,
					size:10
				},
				
				items: [
                    {
                        prop: 'gradeId',
                        type: 'select',
                        label: '年级',
                        value:'',
//                      rules: [
//                          {required: true, message: '位置不能为空'}
//                      ],
                        options: [
                        ],
                        defaultProps: {
                        	id: 'id',
                        	label: 'name'
                        },
                        hasAll: true,
//                      change: (val) => {
//                          this.classList(val);
//                      }
                    },
                    {
                        prop: 'typeId',
                        type: 'select',
                        label: '推荐类型',
                        options: [  
                        ],
                        defaultProps: {
                        	id: 'id',
                        	label: 'name'
                        },
                        hasAll: true
                    },
                    
                    {
                        prop: 'name',
                        type: 'input',
                        label: '推荐书籍名称',
                    },
                   
                    {
                        type: 'action',
                        actionList: [
                            {
                                text: '查询',
                                btnType: 'warning',
                                handleClick: () => {
									this.tableList()
//                                  this.formValidate('locationAddForm', this.save);
                                }
                            },
                            
                        ]
                    }
                ],
				columns: [
					{
						//  全选模块
                        type: 'selection'	
					},
					
					{
						label: '推荐书籍ID',
						prop: 'id'
					},
					{
						label: '推荐书籍名称',
						prop: 'name'
					},
					{
						label: '年级',
						prop: 'gradeName'
					},
					{
						label: '推荐类别',
						prop: 'typeName'
					},
					{
						label: '作者',
						prop: 'author'
					},
					{
						label: '出版社',
						prop: 'press'
					},
					{
						label: '书籍封面',
						prop: 'coverUrl',
						type:'img',
						renderContent: (h, { row }) => {
							if(row.coverUrl.indexOf('?uploadId')){
					           return [<img style='width:50px;height:50px' src={row.coverUrl.split('?uploadId')[0]} />]
					        }else{
					           return [<img style='width:50px;height:50px' src={row.coverUrl}/>];
					        }
                        }
					},

					{
						label: '操作',
						type: 'action',
						width:'260px',
						renderContent: (h, { row }) => {
							return [
								<el-button type='primary' on-click={() => this.$router.push(`booksAdmin/see/${row.id}`)}  size='mini'>查看</el-button>,
								<el-button type='' on-click={() => this.$router.push(`booksAdmin/edit/${row.id}`)} style='border:1px solid #409EFF; color:#409EFF' size='mini' >更新</el-button>,
								<el-button type='danger' on-click={() => this.global.deleteConfirm.call(this, this.delect, row.id)} size='mini' >删除</el-button>,
							]
                        }
					},
				],
				data: [],
				total: 0,
				deleteArr:[],
				loading: true
			}
		},
		methods: {
			pageChange(index) {
				this.search.current = index;
				this.tableList();
			},
			getType(){
				booksAdmin.booksTyesList(this.search).then(res => {
					if(res.data.code === 0) {
						this.items[1].options=res.data.data.records;
                    }
                    
                })
			
            },
			tableList() {
				booksAdmin.table(this.search).then(res => {
//                  console.log('推荐管理表格',res)  //接受到的参数
					if(res.data.code === 0) {
						this.loading = false;
						this.data = res.data.data.records;
                        this.total =  res.data.data.total;
                    }
                    
                })
            },
            selectionChange(data) {
				this.deleteArr=[];
				for (let item of data){
					this.deleteArr.push(item.id)
				}
			},
           	delect(id){
           		if(this.data.length === 1 && this.search.current > 1) {
           			this.search.current--;
           		}
           		booksAdmin.Delete(id).then(res => {
					if(res.data.code === 0) {
						this.$message.success('删除成功');
						this.tableList()
                    }
                    
                })
				
           	},
           	delectList() {
				let self=this;
		        if(this.deleteArr.length === 0) {
		          this.$message.error('请至少选择一项');
		          
		          return;
		        }else{
//		        	console.log(this.deleteArr)
		        	if(this.data.length === 1 && this.search.current > 1) {
           				this.search.current--;
           			}
		        	let ids=this.deleteArr
		        	this.global.deleteConfirm.call(this,function(){
		        		booksAdmin.DeleteS(ids).then(res => {
					          if(res.data.code === 0) {
					            self.$message.success('删除成功');
					            self.tableList();
					          }
					     })
		        	})	
		        	
		        }
		        
		   },
			goAdd(){
				this.$router.push({
					name: 'booksAdd'
				})
			},
			
    
		},
		mounted() {
			this.items[0].options = this.global.session.get('gradeList')
			this.tableList()
			this.getType()
		},
		components: {
			DataTable,
			SearchForm
		}
	}
</script>
<style>
	
</style>

<style lang="less" scoped>
	.button-box{
    	.btn-add{
    		float: left;
    	}
    	.btn-delete{
    		float:right
    	}
    }
	
</style>

