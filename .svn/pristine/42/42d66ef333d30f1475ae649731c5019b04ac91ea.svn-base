<template>
    <div class="questType">
        <div class="content">
            <SearchForm :items="items" :showMessage="true" :inline="true" :model="search" ref="onSubmit"></SearchForm>
            <DataTable :loading="loading" :columns="columns" :data="data" :total="total" :page-size="search.size" @page-change="pageChange" @selection-change="selectionChange"></DataTable>
        </div>
    </div>
</template>
<script>

    // 模块的引用
    import SearchForm from '@components/search-form/index';
    import DataTable from '@components/data-table/index'

    //  接口
    import reading from '@src/network/subject/quest-setting/reading.js';


    export default {
        name: 'questType',
        data: function () {
            return {
                search: {
                    current: 1,
                    gradeId: '',
                    size: 10,
                    stuName: '',
                    verifyType: 1,
                    insertTime: '',
                    verifyTime: '',
                    vgraName: '',
                },
                items: [
                    {
                        prop: 'stuName',
                        type: 'input',
                        label: '学生姓名',
                        placeholder: '请选择学生姓名',
                    },
                    {
                        prop: 'gradeId',
                        type: 'select',
                        label: '年级',
                        placeholder: '请选择年级',
                        options: [
                        ],
                        defaultProps: {
                            id: 'id',
                            label: 'name'
                        }
                    },
                    {
                        type: 'action',
                        actionList: [
                            {
                                text: '查询',
                                btnType: 'primary',
                                handleClick: (row) => {
                                    this.answerWay();
                                }
                            }
                        ]
                    }
                ],
                // table的属性设置
                columns: [
                    {
                        label: '学生姓名',
                        prop: 'stuName'
                    },
                    {
                        label: '学号',
                        prop: 'answerNum'
                    },
                    {
                        label: '所在班级',
                        prop: 'className'
                    },
                    {
                        label: '负责教师',
                        prop: 'teaName'
                    },
                    {
                        label: '申请挑战年级',
                        prop: 'verifyName'
                    },
                    {
                        label: '申请原因',
                        prop: 'remark'
                    },
                    {
                        label: '申请时间',
                        prop: 'insertTime',
                        renderContent: (h, { row }) => {
                            return this.global.dateFilter.ymdHm(row.insertTime)
                        }
                    },
                    {
                        label: '审批状态',
                        prop: 'verifyStatus',
                      formatter: (row => {
                        if(row.verifyStatus == 0) {
                             return '未处理';
                        }else if(row.type == 2) {
                              return '为通过';
                        }else{
                              return '驳回';
                        }
                      })
                    },
                     {
                         label: '审批原因',
                         prop: 'verifyRemark'
                     },
                    {
                        label: '审批人',
                        prop: 'verifyName'
                    },
                    {
                        label: '审批时间',
                        prop: 'verifyTime',
                        renderContent: (h, { row }) => {
                            return this.global.dateFilter.ymdHm(row.verifyTime)
                        }
                    },
                    {
                        type: 'action',
                        width: '250',
                        label: '操作',
                        renderContent: (h, { row }) => {
                            return [
                            <el-button type='primary' size='mini' on-click={() => this.$router.push({ name: 'readEdit', query: row })}>更新</el-button>,
                            <el-button type='danger' size='mini' on-click={() => this.global.deleteConfirm.call(this, this.delect, row.id)}>删除</el-button>
                            ];
                        }
                    }
                ],
                data: [],
                loading: true, //  加载缓冲
                total: 0,  // 总页数,
                selection: []


            }
        },
        components: {
            SearchForm,
            DataTable
        },
        methods: {
            pageChange(index) {
                this.search.current = index;
                this.answerWay();
            },
            answerWay() {
                let params = {
                    ...this.search
                };
                this.loading = true;
                reading.list(params).then(res => {
                    if(res.data.code === 0) {
                        this.loading = false;
                        this.data = res.data.data.records;
                        this.total = this.data.length;
                    }
                })
            },
            delect(id){
                reading.del(id).then(res => {
                    if(res.data.code === 0) {
                        this.$message.success('删除成功');
                        this.answerWay();
                    }
                })
            }
        },
        mounted() {
            this.answerWay();
            this.items[1].options = this.global.session.get('gradeList')
        }
    }
</script>
<style lang="less">
    .questType{
    .bread-title{
        padding: 10px 0 10px 20px;
    .last >span{color: #474e5d;}
    }
    .content{
        background-color: #ffffff;padding: 20px 18px;
    .button-box{
    .delectBatch{float: right}
    }
    }
    }
</style>

